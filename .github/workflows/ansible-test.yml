name: CI
on:
  push:
    branches:
      - main
      - stable-*
  pull_request:
  schedule:
    - cron: '0 5 * * *'  # 05:00 UTC

jobs:
  sanity:
    name: Sanity (Ⓐ${{ matrix.ansible }})
    strategy:
      matrix:
        ansible:
          - stable-2.9
          - stable-2.10
          - stable-2.11
          - stable-2.12
          - stable-2.13
          - devel
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          path: ansible_collections/community/internal_test_tools

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          # it is just required to run that once as "ansible-test sanity" in the docker image
          # will run on all python versions it supports.
          python-version: '3.10'

      # Install the head of the given branch (devel, stable-2.10)
      - name: Install ansible-core (${{ matrix.ansible }})
        run: pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible }}.tar.gz --disable-pip-version-check

      # run ansible-test sanity inside of Docker.
      # The docker container has all the pinned dependencies that are required
      # and all Python versions ansible supports.
      - name: Run sanity tests
        run: ansible-test sanity --docker -v --color --coverage
        working-directory: ./ansible_collections/community/internal_test_tools

      - name: Generate coverage report
        run: ansible-test coverage xml -v --requirements --group-by command --group-by version
        working-directory: ./ansible_collections/community/internal_test_tools

      # See the reports at https://codecov.io/gh/ansible_collections/community.internal_test_tools
      - uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: false

  units:
    runs-on: ubuntu-latest
    name: Units (Ⓐ${{ matrix.ansible }})
    strategy:
      # As soon as the first unit test fails, cancel the others to free up the CI queue
      fail-fast: true
      matrix:
        ansible:
          - stable-2.9
          - stable-2.10
          - stable-2.11
          - stable-2.12
          - stable-2.13
          - devel

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          path: ansible_collections/community/internal_test_tools

      - name: Set up Python ${{ matrix.ansible }}
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install ansible-core (${{ matrix.ansible }})
        run: pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible }}.tar.gz --disable-pip-version-check

      - name: Run unit test
        run: ansible-test units -v --color --docker --coverage
        working-directory: ./ansible_collections/community/internal_test_tools

      - name: Generate coverage report
        run: ansible-test coverage xml -v --requirements --group-by command --group-by version
        working-directory: ./ansible_collections/community/internal_test_tools

      - name: Install requirements for tools unit tests
        run: pip install pytest pytest-cov --disable-pip-version-check

      - name: Run unit test for tools
        run: python -m pytest --cov-branch --cov=tools --cov=tests/tool_unit/ --cov-report term-missing -vv tests/tool_unit/
        working-directory: ./ansible_collections/community/internal_test_tools

      - name: Combine coverage for tools
        run: coverage xml -i
        working-directory: ./ansible_collections/community/internal_test_tools

      # See the reports at https://codecov.io/gh/ansible_collections/community.internal_test_tools
      - uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: false

  integration:
    runs-on: ubuntu-latest
    name: I (Ⓐ${{ matrix.ansible }}+py${{ matrix.python }})
    strategy:
      fail-fast: false
      matrix:
        ansible:
          - stable-2.13
          - devel
        python:
          - 2.7
          - 3.5
          - 3.6
          - 3.7
          - 3.8
          - 3.9
          - "3.10"
        exclude:
          # Because ansible-test doesn't support python3.10 for ansible-core 2.11
          - ansible: stable-2.11
            python: "3.10"
        include:
          # 2.9
          - ansible: stable-2.9
            python: 2.7
          - ansible: stable-2.9
            python: 3.5
          - ansible: stable-2.9
            python: 3.6
          # 2.10
          - ansible: stable-2.10
            python: 3.5
          # 2.11
          - ansible: stable-2.11
            python: 2.6
          # 2.12
          - ansible: stable-2.12
            python: 2.6
          - ansible: stable-2.12
            python: 3.5

    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          path: ansible_collections/community/internal_test_tools

      - name: Set up Python ${{ matrix.ansible }}
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Install ansible-core (${{ matrix.ansible }})
        run: pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible }}.tar.gz --disable-pip-version-check

      - name: Run integration test
        run: ansible-test integration -v --color --retry-on-error --continue-on-error --diff --python ${{ matrix.python }} --docker --coverage
        working-directory: ./ansible_collections/community/internal_test_tools

      - name: Generate coverage report
        run: ansible-test coverage xml -v --requirements --group-by command --group-by version
        working-directory: ./ansible_collections/community/internal_test_tools

      # See the reports at https://codecov.io/gh/ansible_collections/community.internal_test_tools
      - uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: false
