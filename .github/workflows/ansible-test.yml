---
# Copyright (c) Ansible Project
# GNU General Public License v3.0+ (see LICENSES/GPL-3.0-or-later.txt or https://www.gnu.org/licenses/gpl-3.0.txt)
# SPDX-License-Identifier: GPL-3.0-or-later

# For the comprehensive list of the inputs supported by the ansible-community/ansible-test-gh-action GitHub Action, see
# https://github.com/marketplace/actions/ansible-test

name: CI
on:
  # Run CI against all pushes (direct commits, also merged PRs), Pull Requests
  push:
    branches:
      - main
      - stable-*
  pull_request:
  # Run CI once per day (at 05:00 UTC)
  schedule:
    - cron: '0 5 * * *'

jobs:
  sanity:
    name: Sanity (Ⓐ${{ matrix.ansible }})
    strategy:
      matrix:
        ansible:
          - stable-2.9
          - stable-2.10
          - stable-2.11
          - stable-2.12
          - stable-2.13
          - devel
    runs-on: ubuntu-latest
    steps:
      - name: Perform sanity testing
        uses: ansible-community/ansible-test-gh-action@unstable/v1
        with:
          ansible-core-version: ${{ matrix.ansible }}
          testing-type: sanity

  units:
    runs-on: ubuntu-latest
    name: Units (Ⓐ${{ matrix.ansible }})
    strategy:
      # As soon as the first unit test fails, cancel the others to free up the CI queue
      fail-fast: false
      matrix:
        ansible:
          -
        python:
          -
        oldpython:
          -
        exclude:
          - ansible:
        include:
          - ansible: stable-2.9
            python: 2.7
          - ansible: stable-2.10
            python: 3.6
          - ansible: stable-2.11
            python: auto
          - ansible: stable-2.12
            oldpython: '3.10'
            python: auto
          - ansible: stable-2.13
            python: '3.9'
            oldpython: '3.10'
          - ansible: devel
            oldpython: auto
            python: auto

    steps:
      - name: Print Python version
        run: |
          python --version

      - name: >-
          Perform unit testing against
          Ansible version ${{ matrix.ansible }}
        uses: ansible-community/ansible-test-gh-action@unstable/v1
        with:
          ansible-core-version: ${{ matrix.ansible }}
          testing-type: units
          python-version: ${{ matrix.oldpython }}
          origin-python-version: ${{ matrix.python }}
        id: anstest

      - name: Print Python version and path
        run: |
          echo ${{ steps.anstest.outputs.origin-python-version }} @ ${{ steps.anstest.outputs.origin-python-path }}
          which python
          python --version

      # Run unit tests for tools

      - name: Check out code
        uses: actions/checkout@v3
        with:
          path: ./collection-checkout/ansible_collections/community/internal_test_tools

      - name: Install ansible-core (${{ matrix.ansible }})
        run: ${{ steps.anstest.outputs.origin-python-path }} -m pip install https://github.com/ansible/ansible/archive/${{ matrix.ansible }}.tar.gz --disable-pip-version-check

      - name: Install requirements for tools unit tests
        run: pip install pytest pytest-cov --disable-pip-version-check

      - name: Run unit test for tools
        run: python -m pytest --cov-branch --cov=tools --cov=tests/tool_unit/ --cov-report term-missing -vv tests/tool_unit/
        working-directory: ./collection-checkout/ansible_collections/community/internal_test_tools

      - name: Combine coverage for tools
        run: coverage xml -i
        working-directory: ./collection-checkout/ansible_collections/community/internal_test_tools

      # See the reports at https://codecov.io/gh/ansible_collections/community.internal_test_tools
      - uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false
          directory: ./collection-checkout/ansible_collections/community/internal_test_tools

  integration:
    runs-on: ubuntu-latest
    name: I (Ⓐ${{ matrix.ansible }}+py${{ matrix.python }})
    strategy:
      fail-fast: false
      matrix:
        ansible:
          - devel
        python:
          - 2.7
          - 3.5
          - 3.6
          - 3.7
          - 3.8
          - 3.9
          - "3.10"
          - "3.11"
        include:
          # 2.9
          - ansible: stable-2.9
            python: 2.7
          - ansible: stable-2.9
            python: 3.5
          - ansible: stable-2.9
            python: 3.6
          # 2.10
          - ansible: stable-2.10
            python: 3.5
          # 2.11
          - ansible: stable-2.11
            python: 2.6
          # 2.12
          - ansible: stable-2.12
            python: 2.6
          - ansible: stable-2.12
            python: 3.5
          # 2.13
          - ansible: stable-2.13
            python: 2.7
          - ansible: stable-2.13
            python: 3.6

    steps:
      - name: >-
          Perform integration testing against
          Ansible version ${{ matrix.ansible }}
          under Python ${{ matrix.python }}
        uses: ansible-community/ansible-test-gh-action@unstable/v1
        with:
          ansible-core-version: ${{ matrix.ansible }}
          target-python-version: ${{ matrix.python }}
          testing-type: integration
